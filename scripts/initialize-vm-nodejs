
export INST=nodejs-vm-01
multipass launch --name $INST
multipass ls
multipass shell $INST

export CODEHOME=/Users/florinc/dev/git
export NODECODE=$CODEHOME/$INST
mkdir -p $NODECODE
export REMOTENODECODE=/home/ubuntu/nodejs/app
multipass umount $INST:$REMOTENODECODE
multipass mount $NODECODE $INST:$REMOTENODECODE


# https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04
/usr/bin/yes | sudo apt update
/usr/bin/yes | sudo apt install nodejs
node -v
/usr/bin/yes | sudo apt install npm

# update nodejs to latest version: https://phoenixnap.com/kb/update-node-js-version

npm cache clean -f
sudo npm install -g n
sudo n stable
hash -r
node --version

# typescript: https://www.digitalocean.com/community/tutorials/setting-up-a-node-project-with-typescript
cd /home/ubuntu/nodejs/app

npm init

npm install --save-dev typescript

vi tsconfig.json

====
{
  "compilerOptions": {
    "module": "commonjs",
    "esModuleInterop": true,
    "target": "es6",
    "moduleResolution": "node",
    "sourceMap": true,
    "outDir": "build"
  },
  "lib": ["es2015"]
}
====


# express: https://expressjs.com/en/starter/installing.html
npm install express --save

mkdir src
vi src/app.ts

====
import express from 'express';
const app = express();
const port = 3000;

app.get('/', (req, res) => {
  res.send('Hello World!');
});

app.listen(port, () => {
  return console.log(`Express is listening at http://localhost:${port}`);
});
====

npx tsc
node build/app.js

now navigate to http://192.168.64.4:3000/ and you should see "Hello World!"

# set up the linter: https://www.digitalocean.com/community/tutorials/setting-up-a-node-project-with-typescript
npm install --save-dev eslint
npx eslint --init

# This will ask you a series of questions. For this project weâ€™ll answer the following:

How would you like to use ESLint?: To check syntax and find problems
What type of modules does your project use?: JavaScript modules (import/export)
Which framework does your project use?: None of these
Does your project use TypeScript?: Yes
Where does your code run?: Node
What format do you want your config file to be in?: JavaScript
Finally, you will be prompted to install some additioanl eslint libraries. Choose Yes.

# to run linter:
npx eslint . --ext .ts

# modify package.json:

====
{
  "name": "node_project",
  "version": "1.0.0",
  "description": "",
  "main": "build/app.js",
  "scripts": {
    "start": "tsc && node build/app.js",
    "lint": "eslint . --ext .ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/express": "^4.17.1",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "eslint": "^8.3.0",
    "typescript": "^4.5.2"
  },
  "dependencies": {
    "express": "^4.17.1"
  }
}

====

# if you accidentally added node_modules to git:
git rm -r --cached node_modules


# install TypeOrm: https://typeorm.io/#/

npm install typeorm --save
npm install reflect-metadata --save
npm install @types/node --save-dev
npm install mongodb@^3.6.0 --save

# add to tsconfig.json:

====
"emitDecoratorMetadata": true,
"experimentalDecorators": true,
====

#### Older ####

npx express-generator

# generate app: https://expressjs.com/en/starter/generator.html

# https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -

echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list

sudo apt-get update

sudo apt-get install -y mongodb-org

# Mount data drive

export INST=florinc-vm-04
export MONGODATA=/Users/florinc/dev/mongodb/data/$INST
export REMOTEMONGODATA=/mongodb/data/replica
multipass mount $MONGODATA $INST:$REMOTEMONGODATA

multipass ls


multipass shell $INST

####

# Edit /etc/mongod.conf

sudo vi /etc/mongod.conf

storage:
  dbPath: /home/ubuntu/mongodb/data # /var/lib/mongodb 

net:
  port: 27017
  bindIp: 127.0.0.1,192.168.64.5

replication:
  replSetName: "florinc-replicaset-02"

sudo systemctl enable mongod.service
sudo systemctl restart mongod.service
sudo systemctl start mongod
sudo systemctl status mongod
